{
    seq 
        assign nn is 10;
        assign nt is 5;
        assign gcd is 0;
        assign i is 1;
        assign t is 5;
        while i < nn and i < nt do 
            seq 
                put i is i+1 end; 
                if nn%i = 0 and nt%i = 0 then put gcd is i end else put t is t+1 end end
            end
        done;
        printing gcd end
    end

}


{func f(n) if n=1 or n=0 then 1 else n*funCall f(n-1) end , funCall f(3)}

{
    seq 
        assign t is 5;
        assign s is "";
        assign i is 0;
        assign r is 0;
        while t > 0 do 
            seq 
                if t%2 = 0 then put s is s+"0" end else put s is s+"1" end end;
                put t is t/2 end
            end
        done;
        printing s end
    end
}

{
    seq
        assign a is lst [1,2,3,4,5];
        assign i is 0;
        assign b is len a;
        assign sum is 0;
        assign temp is 0;
        while i < b 
            do 
                seq
                    let d is index a[i] in
                    put sum is sum+d end
                    end;
                    if sum < 0 then put sum is 0 end else put temp is temp + 1 end end;
                    put i is i+1 end
                end
            done;
        printing sum end
    end 
}

{
seq 
        assign s is "hello";
        printing vowelnumb(s) end
    end
}

{
seq
    assign s is "abba";
    assign l is strlength(s);
    assign i is 0;
    assign flag is 0;
    while i< l/2 do
    seq
        assign t1 is stringidx(s,i);
        assign t2 is stringidx(s,l-i-1);
        if t1 = t2 then put flag is 1 end else put flag is 0 end end
    end
    done;
    if flag=1 then printing "yes" end else printing "no" end end 
end
}
{
    seq
        assign a is lst [1,2,3,4,5];
        assign i is 0;
        assign b is len a;
        assign sum is 0;
        while i < b 
            do 
                seq
                let d is index a[i] in
                put sum is sum+d end
                end;
                put i is i+1 end
                end
            done;
        printing sum end
    end 
}

{
    seq 
        assign a is lst [1, 3, 4, 2, 10, 2];
        assign i is 0;
        assign max is 0;
        assign t is 0;
        assign temp is 0;
        assign maxtwo is 0;
        assign prevmax is 0;
        assign d is len a;
        while t < d do
            seq 

                let f is index a[t] in 
                    if max < f 
                    then 
                
                        put max is f end 
                    else 
                    put temp is temp+1 end 
                    end
                end;
                put t is t+1 end
            end
        done;
        while i < d do 
            seq
                let g is index a[i] in
                    if maxtwo < g 
                    then
                        seq
                            put prevmax is maxtwo end;
                            put maxtwo is g end
                                if maxtwo = max 
                                then 
                                    put maxtwo is prevmax end 
                                else 
                                    put temp is temp+1 end 
                                end
                        end 
                    else 
                        put temp is temp+1 end 
                    end
                end;
                put i is i+1 end
            end
        done;
        printing maxtwo end
        end
        }

        
        
{
seq 
    assign num is 12;
    assign i is 2;
    assign f is 1;
    while num>i and f=1
    do
            if num%i=0 
            then
                seq 
                printing "CompositeNumber" end;
                put i is i + 1 end;
                put f is 0 end 
                end
            else 
                put i is i + 1 end 
            end
        
    done;
    if num=i 
    then 
        printing "PrimeNumber" end 
    else 
        printing "CompositeNumber" end
    end
end
}

{
    seq assign a is "hello world why";
    printing lenSen a end
    end
}
{
    seq
        assign a is lst [1,2,3,4,5];
        assign i is 0;
        assign b is len a;
        assign sum is 0;
        assign temp is 0;
        while i < b 
            do 
                seq
                    let d is index a[i] in
                    put sum is sum+d end
                    end;
                    if sum < 0 then put sum is 0 end else put temp is temp + 1 end end;
                    put i is i+1 end
                end
            done;
        printing sum end
        end
}

{
seq 
    assign num is 12;
    assign i is 2;
    assign f is 1;
    while num>i and f=1
    do
            if num%i=0 
            then
                seq 
                printing "CompositeNumber" end;
                put i is i + 1 end;
                put f is 0 end 
                end
            else 
                put i is i + 1 end 
            end
        
    done;
    if num=i 
    then 
        printing "PrimeNumber" end 
    else 
        printing "CompositeNumber" end
    end
end
}

{
let a is 10 in 
    if a%2 = 0 then
        printing "even"
        end
    else
        printing "odd"
        end
        end
end

}
